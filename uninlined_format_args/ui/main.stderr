warning: nested structure is 3 levels deep (max: 3)
  --> $DIR/main.rs:19:5
   |
LL | /     if value > 0 {
LL | |         if value < 100 {
LL | |             if value % 2 == 0 {
LL | |                 println!("Level 3 - should lint");
...  |
LL | |     }
   | |_____^
   |
   = help: consider using early returns, guard clauses, or extracting functions to reduce nesting
   = note: `#[warn(nesting_too_deep)]` on by default

warning: nested structure is 3 levels deep (max: 3)
  --> $DIR/main.rs:28:5
   |
LL | /     if value > 0 {
LL | |         if value < 100 {
LL | |             if value % 2 == 0 {
LL | |                 if value > 10 {
...  |
LL | |     }
   | |_____^
   |
   = help: consider using early returns, guard clauses, or extracting functions to reduce nesting

warning: nested structure is 3 levels deep (max: 3)
  --> $DIR/main.rs:57:5
   |
LL | /     if let Some(x) = opt1 {
LL | |         if let Some(y) = opt2 {
LL | |             if let Some(z) = opt3 {
LL | |                 println!("Level 3 - should lint: {} {} {}", x, y, z);
...  |
LL | |     }
   | |_____^
   |
   = help: consider using early returns, guard clauses, or extracting functions to reduce nesting

warning: nested structure is 3 levels deep (max: 3)
  --> $DIR/main.rs:84:5
   |
LL | /     if let Ok(x) = res1 {
LL | |         if let Ok(y) = res2 {
LL | |             if let Ok(z) = res3 {
LL | |                 println!("Level 3 - should lint: {} {} {}", x, y, z);
...  |
LL | |     }
   | |_____^
   |
   = help: consider using early returns, guard clauses, or extracting functions to reduce nesting

warning: nested structure is 3 levels deep (max: 3)
  --> $DIR/main.rs:99:5
   |
LL | /     if value > 0 {
LL | |         if let Some(x) = option {
LL | |             if let Ok(y) = result {
LL | |                 println!("Mixed level 3 - should lint: {} {} {}", value, x, y);
...  |
LL | |     }
   | |_____^
   |
   = help: consider using early returns, guard clauses, or extracting functions to reduce nesting

warning: 5 warnings emitted

